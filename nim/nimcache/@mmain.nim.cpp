/* Generated by Nim Compiler v1.2.4 */
/*   (c) 2020 Andreas Rumpf */
/* The generated code is subject to the original license. */
/* Compiled for: Windows, amd64, gcc */
/* Command for C compiler:
   g++.exe -c  -w -mno-ms-bitfields -w -fpermissive -mno-ms-bitfields  -std=gnu++14 -funsigned-char  -ID:\Nim\lib -ID:\cygwin\home\Leonardo\Workspace\ComProg\nim -o D:\cygwin\home\Leonardo\Workspace\ComProg\nim\nimcache\@mmain.nim.cpp.o D:\cygwin\home\Leonardo\Workspace\ComProg\nim\nimcache\@mmain.nim.cpp */
#define NIM_INTBITS 64

#include "nimbase.h"
#include <string.h>
#undef LANGUAGE_C
#undef MIPSEB
#undef MIPSEL
#undef PPC
#undef R3000
#undef R4000
#undef i386
#undef linux
#undef mips
#undef near
#undef far
#undef powerpc
#undef unix
  #  define nimfr_(proc, file) \
      TFrame FR_; \
      FR_.procname = proc; FR_.filename = file; FR_.line = 0; FR_.len = 0; nimFrame(&FR_);

  #  define nimfrs_(proc, file, slots, length) \
      struct {TFrame* prev;NCSTRING procname;NI line;NCSTRING filename; NI len; VarSlot s[slots];} FR_; \
      FR_.procname = proc; FR_.filename = file; FR_.line = 0; FR_.len = length; nimFrame((TFrame*)&FR_);

  #  define nimln_(n, file) \
      FR_.line = n; FR_.filename = file;
  struct NimStringDesc;
struct TGenericSeq;
struct TGenericSeq {
NI len;
NI reserved;
};
struct NimStringDesc : public TGenericSeq {
NIM_CHAR data[SEQ_DECL_SIZE];
};
typedef NimStringDesc* tyArray__nHXaesL0DJZHyVS07ARPRA[1];
static N_INLINE(void, nimZeroMem)(void* p, NI size);
static N_INLINE(void, nimSetMem__zxfKBYntu9cBapkhrCOk1fgmemory)(void* a, int v, NI size);
N_LIB_PRIVATE N_NIMCALL(NimStringDesc*, nimIntToStr)(NI x);
N_LIB_PRIVATE N_NIMCALL(void, echoBinSafe)(NimStringDesc** args, NI argsLen_0);
N_LIB_PRIVATE N_NIMCALL(NI32, plusplus___TG1JVNBw69cidwomzuExASw)(NI32 a, NI32 b);
N_LIB_PRIVATE N_NOINLINE(void, raiseOverflow)(void);
static N_INLINE(void, nimFrame)(TFrame* s);
N_LIB_PRIVATE N_NOINLINE(void, callDepthLimitReached__mMRdr4sgmnykA9aWeM9aDZlw)(void);
static N_INLINE(void, popFrame)(void);
N_LIB_PRIVATE N_NIMCALL(NI, ltfgt___LhJDEbredOV869b9aVRu6E9aw)(NI x);
static N_INLINE(void, initStackBottomWith)(void* locals);
N_LIB_PRIVATE N_NOINLINE(void, nimGC_setStackBottom)(void* theStackBottom);
N_LIB_PRIVATE N_NIMCALL(void, stdlib_ioDatInit000)(void);
N_LIB_PRIVATE N_NIMCALL(void, stdlib_ioInit000)(void);
N_LIB_PRIVATE N_NIMCALL(void, systemDatInit000)(void);
N_LIB_PRIVATE N_NIMCALL(void, systemInit000)(void);
N_LIB_PRIVATE N_NIMCALL(void, NimMainModule)(void);
N_LIB_PRIVATE NIM_CONST NI32 M__dwceeGYO9c48JvzCIVRIwoA = ((NI32) 1000000007);
N_LIB_PRIVATE NI32 a__9cWLbw5tGuQDnREm7o4KXdA = ((NI32) 0);
N_LIB_PRIVATE NI32 b__butjSOByVkZOvORx2CNAPA = ((NI32) 1);
N_LIB_PRIVATE NI i__5MfTn17iFUWVmcPtWcY4nQ;
N_LIB_PRIVATE NI32 t__f1KW8wkmeYdd7gPKl7pzhA;
extern TFrame* framePtr__HRfVMH3jYeBJz6Q6X9b6Ptw;
extern TFrame* framePtr__HRfVMH3jYeBJz6Q6X9b6Ptw;
extern TFrame* framePtr__HRfVMH3jYeBJz6Q6X9b6Ptw;
extern TFrame* framePtr__HRfVMH3jYeBJz6Q6X9b6Ptw;
extern TFrame* framePtr__HRfVMH3jYeBJz6Q6X9b6Ptw;
extern TFrame* framePtr__HRfVMH3jYeBJz6Q6X9b6Ptw;
static N_INLINE(void, nimSetMem__zxfKBYntu9cBapkhrCOk1fgmemory)(void* a, int v, NI size) {
	void* T1_ = memset(a, v, ((size_t) (size)));
}
static N_INLINE(void, nimZeroMem)(void* p, NI size) {
	nimSetMem__zxfKBYntu9cBapkhrCOk1fgmemory(p, ((int) 0), size);
}
static N_INLINE(void, nimFrame)(TFrame* s) {
	{
		if (!(framePtr__HRfVMH3jYeBJz6Q6X9b6Ptw == NIM_NIL)) goto LA3_;
{		(*s).calldepth = ((NI16) 0);
}	}
	goto LA1_;
	LA3_: ;
	{
		(*s).calldepth = (NI16)((*framePtr__HRfVMH3jYeBJz6Q6X9b6Ptw).calldepth + ((NI16) 1));
	}
	LA1_: ;
	(*s).prev = framePtr__HRfVMH3jYeBJz6Q6X9b6Ptw;
	framePtr__HRfVMH3jYeBJz6Q6X9b6Ptw = s;
	{
		if (!((*s).calldepth == ((NI16) (((NI) 2000))))) goto LA8_;
{		callDepthLimitReached__mMRdr4sgmnykA9aWeM9aDZlw();
}	}
	LA8_: ;
}
static N_INLINE(void, popFrame)(void) {
	framePtr__HRfVMH3jYeBJz6Q6X9b6Ptw = (*framePtr__HRfVMH3jYeBJz6Q6X9b6Ptw).prev;
}
N_LIB_PRIVATE N_NIMCALL(NI32, plusplus___TG1JVNBw69cidwomzuExASw)(NI32 a, NI32 b) {
	NI32 result;
	nimfr_("++", "D:\\cygwin\\home\\Leonardo\\Workspace\\ComProg\\nim\\main.nim");
	result = (NI32)0;
	nimln_(3, "D:\\cygwin\\home\\Leonardo\\Workspace\\ComProg\\nim\\main.nim");
	{
		NI TM__V45tF8B8NBcxFcjfe7lhBw_2;
		NI TM__V45tF8B8NBcxFcjfe7lhBw_3;
		NI TM__V45tF8B8NBcxFcjfe7lhBw_4;
		if (nimAddInt(a, b, &TM__V45tF8B8NBcxFcjfe7lhBw_2)) { raiseOverflow(); };
		if (TM__V45tF8B8NBcxFcjfe7lhBw_2 < (-2147483647 -1) || TM__V45tF8B8NBcxFcjfe7lhBw_2 > 2147483647){ raiseOverflow(); }
		if (!(M__dwceeGYO9c48JvzCIVRIwoA <= (NI32)(TM__V45tF8B8NBcxFcjfe7lhBw_2))) goto LA3_;
{		nimln_(4, "D:\\cygwin\\home\\Leonardo\\Workspace\\ComProg\\nim\\main.nim");
		if (nimAddInt(a, b, &TM__V45tF8B8NBcxFcjfe7lhBw_3)) { raiseOverflow(); };
		if (TM__V45tF8B8NBcxFcjfe7lhBw_3 < (-2147483647 -1) || TM__V45tF8B8NBcxFcjfe7lhBw_3 > 2147483647){ raiseOverflow(); }
		if (nimSubInt((NI32)(TM__V45tF8B8NBcxFcjfe7lhBw_3), M__dwceeGYO9c48JvzCIVRIwoA, &TM__V45tF8B8NBcxFcjfe7lhBw_4)) { raiseOverflow(); };
		if (TM__V45tF8B8NBcxFcjfe7lhBw_4 < (-2147483647 -1) || TM__V45tF8B8NBcxFcjfe7lhBw_4 > 2147483647){ raiseOverflow(); }
		result = (NI32)(TM__V45tF8B8NBcxFcjfe7lhBw_4);
}	}
	goto LA1_;
	LA3_: ;
	{
		NI TM__V45tF8B8NBcxFcjfe7lhBw_5;
		nimln_(6, "D:\\cygwin\\home\\Leonardo\\Workspace\\ComProg\\nim\\main.nim");
		if (nimAddInt(a, b, &TM__V45tF8B8NBcxFcjfe7lhBw_5)) { raiseOverflow(); };
		if (TM__V45tF8B8NBcxFcjfe7lhBw_5 < (-2147483647 -1) || TM__V45tF8B8NBcxFcjfe7lhBw_5 > 2147483647){ raiseOverflow(); }
		result = (NI32)(TM__V45tF8B8NBcxFcjfe7lhBw_5);
	}
	LA1_: ;
	popFrame();
	return result;
}
N_LIB_PRIVATE N_NIMCALL(NI, ltfgt___LhJDEbredOV869b9aVRu6E9aw)(NI x) {
	NI result;
	NI TM__V45tF8B8NBcxFcjfe7lhBw_7;
	nimfr_("<f>", "D:\\cygwin\\home\\Leonardo\\Workspace\\ComProg\\nim\\main.nim");
	result = (NI)0;
	nimln_(21, "D:\\cygwin\\home\\Leonardo\\Workspace\\ComProg\\nim\\main.nim");
	if (nimAddInt(x, ((NI) 1), &TM__V45tF8B8NBcxFcjfe7lhBw_7)) { raiseOverflow(); };
	result = (NI)(TM__V45tF8B8NBcxFcjfe7lhBw_7);
	popFrame();
	return result;
}
static N_INLINE(void, initStackBottomWith)(void* locals) {
	nimGC_setStackBottom(locals);
}

N_LIB_PRIVATE void PreMainInner(void) {
	stdlib_ioInit000();
}

N_LIB_PRIVATE int cmdCount;
N_LIB_PRIVATE char** cmdLine;
N_LIB_PRIVATE char** gEnv;
N_LIB_PRIVATE void PreMain(void) {
	void (*volatile inner)(void);
	inner = PreMainInner;
	stdlib_ioDatInit000();
	systemDatInit000();
	initStackBottomWith((void *)&inner);
	systemInit000();
	(*inner)();
}

N_LIB_PRIVATE N_CDECL(void, NimMainInner)(void) {
	NimMainModule();
}

N_CDECL(void, NimMain)(void) {
	void (*volatile inner)(void);
	PreMain();
	inner = NimMainInner;
	initStackBottomWith((void *)&inner);
	(*inner)();
}

int main(int argc, char** args, char** env) {
	cmdLine = args;
	cmdCount = argc;
	gEnv = env;
	NimMain();
	return nim_program_result;
}

N_LIB_PRIVATE N_NIMCALL(void, NimMainModule)(void) {
{
	tyArray__nHXaesL0DJZHyVS07ARPRA T5_;
	nimfr_("main", "D:\\cygwin\\home\\Leonardo\\Workspace\\ComProg\\nim\\main.nim");
	{
		nimln_(77, "D:\\Nim\\lib\\system\\iterators_1.nim");
		NI res = ((NI) 1);
		{
			nimln_(78, "D:\\Nim\\lib\\system\\iterators_1.nim");
			while (1) {
				tyArray__nHXaesL0DJZHyVS07ARPRA T4_;
				NI TM__V45tF8B8NBcxFcjfe7lhBw_6;
				if (!(res <= ((NI) 45))) goto LA3;
				nimln_(14, "D:\\cygwin\\home\\Leonardo\\Workspace\\ComProg\\nim\\main.nim");
				i__5MfTn17iFUWVmcPtWcY4nQ = res;
				nimln_(15, "D:\\cygwin\\home\\Leonardo\\Workspace\\ComProg\\nim\\main.nim");
				nimZeroMem((void*)T4_, sizeof(tyArray__nHXaesL0DJZHyVS07ARPRA));
				T4_[0] = nimIntToStr(((NI) (b__butjSOByVkZOvORx2CNAPA)));
				echoBinSafe(T4_, 1);
				t__f1KW8wkmeYdd7gPKl7pzhA = 0;
				nimln_(16, "D:\\cygwin\\home\\Leonardo\\Workspace\\ComProg\\nim\\main.nim");
				t__f1KW8wkmeYdd7gPKl7pzhA = plusplus___TG1JVNBw69cidwomzuExASw(a__9cWLbw5tGuQDnREm7o4KXdA, b__butjSOByVkZOvORx2CNAPA);
				nimln_(17, "D:\\cygwin\\home\\Leonardo\\Workspace\\ComProg\\nim\\main.nim");
				a__9cWLbw5tGuQDnREm7o4KXdA = b__butjSOByVkZOvORx2CNAPA;
				nimln_(18, "D:\\cygwin\\home\\Leonardo\\Workspace\\ComProg\\nim\\main.nim");
				b__butjSOByVkZOvORx2CNAPA = t__f1KW8wkmeYdd7gPKl7pzhA;
				nimln_(80, "D:\\Nim\\lib\\system\\iterators_1.nim");
				if (nimAddInt(res, ((NI) 1), &TM__V45tF8B8NBcxFcjfe7lhBw_6)) { raiseOverflow(); };
				res = (NI)(TM__V45tF8B8NBcxFcjfe7lhBw_6);
			} LA3: ;
		}
	}
	nimln_(23, "D:\\cygwin\\home\\Leonardo\\Workspace\\ComProg\\nim\\main.nim");
	nimZeroMem((void*)T5_, sizeof(tyArray__nHXaesL0DJZHyVS07ARPRA));
	NI T6_ = ltfgt___LhJDEbredOV869b9aVRu6E9aw(((NI) 1));
	T5_[0] = nimIntToStr(T6_);
	echoBinSafe(T5_, 1);
	popFrame();
}
}

