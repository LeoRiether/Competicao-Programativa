/* Generated by Nim Compiler v1.2.4 */
/*   (c) 2020 Andreas Rumpf */
/* The generated code is subject to the original license. */
/* Compiled for: Windows, amd64, gcc */
/* Command for C compiler:
   g++.exe -c  -w -mno-ms-bitfields -w -fpermissive -mno-ms-bitfields  -std=gnu++14 -funsigned-char  -ID:\Nim\lib -ID:\cygwin\home\Leonardo\Workspace\ComProg\nim -o D:\cygwin\home\Leonardo\Workspace\ComProg\nim\nimcache\stdlib_io.nim.cpp.o D:\cygwin\home\Leonardo\Workspace\ComProg\nim\nimcache\stdlib_io.nim.cpp */
#define NIM_INTBITS 64

#include "nimbase.h"
#include <io.h>
#include <stdio.h>
#include <fcntl.h>
#undef LANGUAGE_C
#undef MIPSEB
#undef MIPSEL
#undef PPC
#undef R3000
#undef R4000
#undef i386
#undef linux
#undef mips
#undef near
#undef far
#undef powerpc
#undef unix
  #  define nimfr_(proc, file) \
      TFrame FR_; \
      FR_.procname = proc; FR_.filename = file; FR_.line = 0; FR_.len = 0; nimFrame(&FR_);

  #  define nimfrs_(proc, file, slots, length) \
      struct {TFrame* prev;NCSTRING procname;NI line;NCSTRING filename; NI len; VarSlot s[slots];} FR_; \
      FR_.procname = proc; FR_.filename = file; FR_.line = 0; FR_.len = length; nimFrame((TFrame*)&FR_);

  #  define nimln_(n, file) \
      FR_.line = n; FR_.filename = file;
  struct NimStringDesc;
struct TGenericSeq;
struct tyObject_IOError__iLZrPn9anoh9ad1MmO0RczFw;
struct tyObject_CatchableError__qrLSDoe2oBoAqNtJ9badtnA;
struct Exception;
struct RootObj;
struct TNimType;
struct TNimNode;
struct tySequence__uB9b75OUPRENsBAu4AnoePA;
struct tyObject_Cell__1zcF9cV8XIAtbN8h5HRUB8g;
struct tyObject_CellSeq__Axo1XVm9aaQueTOldv8le5w;
struct tyObject_GcHeap__1TRH1TZMaVZTnLNcIHuNFQ;
struct tyObject_GcStack__7fytPA5bBsob6See21YMRA;
struct tyObject_MemRegion__x81NhDv59b8ercDZ9bi85jyg;
struct tyObject_SmallChunk__tXn60W2f8h3jgAYdEmy5NQ;
struct tyObject_BigChunk__Rv9c70Uhp2TytkX7eH78qEg;
struct tyObject_LLChunk__XsENErzHIZV9bhvyJx56wGw;
struct tyObject_IntSet__EZObFrE3NC9bIb3YMkY9crZA;
struct tyObject_Trunk__W0r8S0Y3UGke6T9bIUWnnuw;
struct tyObject_AvlNode__IaqjtwKhxLEpvDS9bct9blEw;
struct tyObject_HeapLinks__PDV1HBZ8CQSQJC9aOBFNRSg;
struct tyTuple__ujsjpB2O9cjj3uDHsXbnSzg;
struct tyObject_GcStat__0RwLoVBHZPfUAcLczmfQAg;
struct tyObject_CellSet__jG87P0AI9aZtss9ccTYBIISQ;
struct tyObject_PageDesc__fublkgIY4LG3mT51LU2WHg;
struct tyObject_StackTraceEntry__oLyohQ7O2XOvGnflOss8EA;
struct TGenericSeq {
NI len;
NI reserved;
};
struct NimStringDesc : public TGenericSeq {
NIM_CHAR data[SEQ_DECL_SIZE];
};
typedef N_STDCALL_PTR(NI32, tyProc__YrlAFY4fseJeExebH9aRGbw) (unsigned int codepage);
typedef NU8 tyEnum_TNimKind__jIBKr1ejBgsfM33Kxw4j7A;
typedef NU8 tySet_tyEnum_TNimTypeFlag__v8QUszD1sWlSIWZz7mC4bQ;
typedef N_NIMCALL_PTR(void, tyProc__ojoeKfW4VYIm36I9cpDTQIg) (void* p, NI op);
typedef N_NIMCALL_PTR(void*, tyProc__WSm2xU5ARYv9aAR4l0z9c9auQ) (void* p);
struct TNimType {
NI size;
tyEnum_TNimKind__jIBKr1ejBgsfM33Kxw4j7A kind;
tySet_tyEnum_TNimTypeFlag__v8QUszD1sWlSIWZz7mC4bQ flags;
TNimType* base;
TNimNode* node;
void* finalizer;
tyProc__ojoeKfW4VYIm36I9cpDTQIg marker;
tyProc__WSm2xU5ARYv9aAR4l0z9c9auQ deepcopy;
};
struct RootObj {
TNimType* m_type;
};
struct Exception : public RootObj {
Exception* parent;
NCSTRING name;
NimStringDesc* message;
tySequence__uB9b75OUPRENsBAu4AnoePA* trace;
Exception* up;
};
struct tyObject_CatchableError__qrLSDoe2oBoAqNtJ9badtnA : public Exception {
};
struct tyObject_IOError__iLZrPn9anoh9ad1MmO0RczFw : public tyObject_CatchableError__qrLSDoe2oBoAqNtJ9badtnA {
};
typedef NU8 tyEnum_TNimNodeKind__unfNsxrcATrufDZmpBq4HQ;
struct TNimNode {
tyEnum_TNimNodeKind__unfNsxrcATrufDZmpBq4HQ kind;
NI offset;
TNimType* typ;
NCSTRING name;
NI len;
TNimNode** sons;
};
struct tyObject_Cell__1zcF9cV8XIAtbN8h5HRUB8g {
NI refcount;
TNimType* typ;
};
struct tyObject_GcStack__7fytPA5bBsob6See21YMRA {
void* bottom;
};
struct tyObject_CellSeq__Axo1XVm9aaQueTOldv8le5w {
NI len;
NI cap;
tyObject_Cell__1zcF9cV8XIAtbN8h5HRUB8g** d;
};
typedef tyObject_SmallChunk__tXn60W2f8h3jgAYdEmy5NQ* tyArray__SiRwrEKZdLgxqz9a9aoVBglg[512];
typedef NU32 tyArray__BHbOSqU1t9b3Gt7K2c6fQig[24];
typedef tyObject_BigChunk__Rv9c70Uhp2TytkX7eH78qEg* tyArray__N1u1nqOgmuJN9cSZrnMHgOQ[32];
typedef tyArray__N1u1nqOgmuJN9cSZrnMHgOQ tyArray__B6durA4ZCi1xjJvRtyYxMg[24];
typedef tyObject_Trunk__W0r8S0Y3UGke6T9bIUWnnuw* tyArray__lh2A89ahMmYg9bCmpVaplLbA[256];
struct tyObject_IntSet__EZObFrE3NC9bIb3YMkY9crZA {
tyArray__lh2A89ahMmYg9bCmpVaplLbA data;
};
typedef tyObject_AvlNode__IaqjtwKhxLEpvDS9bct9blEw* tyArray__0aOLqZchNi8nWtMTi8ND8w[2];
struct tyObject_AvlNode__IaqjtwKhxLEpvDS9bct9blEw {
tyArray__0aOLqZchNi8nWtMTi8ND8w link;
NI key;
NI upperBound;
NI level;
};
struct tyTuple__ujsjpB2O9cjj3uDHsXbnSzg {
tyObject_BigChunk__Rv9c70Uhp2TytkX7eH78qEg* Field0;
NI Field1;
};
typedef tyTuple__ujsjpB2O9cjj3uDHsXbnSzg tyArray__LzOv2eCDGiceMKQstCLmhw[30];
struct tyObject_HeapLinks__PDV1HBZ8CQSQJC9aOBFNRSg {
NI len;
tyArray__LzOv2eCDGiceMKQstCLmhw chunks;
tyObject_HeapLinks__PDV1HBZ8CQSQJC9aOBFNRSg* next;
};
struct tyObject_MemRegion__x81NhDv59b8ercDZ9bi85jyg {
NI minLargeObj;
NI maxLargeObj;
tyArray__SiRwrEKZdLgxqz9a9aoVBglg freeSmallChunks;
NU32 flBitmap;
tyArray__BHbOSqU1t9b3Gt7K2c6fQig slBitmap;
tyArray__B6durA4ZCi1xjJvRtyYxMg matrix;
tyObject_LLChunk__XsENErzHIZV9bhvyJx56wGw* llmem;
NI currMem;
NI maxMem;
NI freeMem;
NI occ;
NI lastSize;
tyObject_IntSet__EZObFrE3NC9bIb3YMkY9crZA chunkStarts;
tyObject_AvlNode__IaqjtwKhxLEpvDS9bct9blEw* root;
tyObject_AvlNode__IaqjtwKhxLEpvDS9bct9blEw* deleted;
tyObject_AvlNode__IaqjtwKhxLEpvDS9bct9blEw* last;
tyObject_AvlNode__IaqjtwKhxLEpvDS9bct9blEw* freeAvlNodes;
NIM_BOOL locked;
NIM_BOOL blockChunkSizeIncrease;
NI nextChunkSize;
tyObject_AvlNode__IaqjtwKhxLEpvDS9bct9blEw bottomData;
tyObject_HeapLinks__PDV1HBZ8CQSQJC9aOBFNRSg heapLinks;
};
struct tyObject_GcStat__0RwLoVBHZPfUAcLczmfQAg {
NI stackScans;
NI cycleCollections;
NI maxThreshold;
NI maxStackSize;
NI maxStackCells;
NI cycleTableSize;
NI64 maxPause;
};
struct tyObject_CellSet__jG87P0AI9aZtss9ccTYBIISQ {
NI counter;
NI max;
tyObject_PageDesc__fublkgIY4LG3mT51LU2WHg* head;
tyObject_PageDesc__fublkgIY4LG3mT51LU2WHg** data;
};
struct tyObject_GcHeap__1TRH1TZMaVZTnLNcIHuNFQ {
tyObject_GcStack__7fytPA5bBsob6See21YMRA stack;
NI cycleThreshold;
NI zctThreshold;
tyObject_CellSeq__Axo1XVm9aaQueTOldv8le5w zct;
tyObject_CellSeq__Axo1XVm9aaQueTOldv8le5w decStack;
tyObject_CellSeq__Axo1XVm9aaQueTOldv8le5w tempStack;
NI recGcLock;
tyObject_MemRegion__x81NhDv59b8ercDZ9bi85jyg region;
tyObject_GcStat__0RwLoVBHZPfUAcLczmfQAg stat;
tyObject_CellSet__jG87P0AI9aZtss9ccTYBIISQ marked;
tyObject_CellSeq__Axo1XVm9aaQueTOldv8le5w additionalRoots;
NI gcThreadId;
};
struct tyObject_StackTraceEntry__oLyohQ7O2XOvGnflOss8EA {
NCSTRING procname;
NI line;
NCSTRING filename;
};
struct tySequence__uB9b75OUPRENsBAu4AnoePA : TGenericSeq {
  tyObject_StackTraceEntry__oLyohQ7O2XOvGnflOss8EA data[SEQ_DECL_SIZE];
};
N_LIB_PRIVATE N_NIMCALL(void*, nimLoadLibrary)(NimStringDesc* path);
N_LIB_PRIVATE N_NIMCALL(void, nimLoadLibraryError)(NimStringDesc* path);
N_LIB_PRIVATE N_NIMCALL(void*, nimGetProcAddr)(void* lib, NCSTRING name);
N_LIB_PRIVATE N_NOINLINE(void, raiseIndexError2)(NI i, NI n);
N_LIB_PRIVATE N_NIMCALL(void, writeWindows__JO9bn8JE1R6MjKZqdvhBrWg)(FILE* f, NimStringDesc* s, NIM_BOOL doRaise);
static N_INLINE(NCSTRING, nimToCStringConv)(NimStringDesc* s);
N_LIB_PRIVATE N_NOINLINE(void, raiseEIO__ZYk14k3sVNZUIjJjtqzFZQ)(NimStringDesc* msg) __attribute__((noreturn));
N_LIB_PRIVATE N_NIMCALL(void*, newObj)(TNimType* typ, NI size);
N_LIB_PRIVATE N_NIMCALL(NimStringDesc*, copyStringRC1)(NimStringDesc* src);
static N_INLINE(void, nimGCunrefNoCycle)(void* p);
static N_INLINE(void, decRef__AT1eRuflKWyTTBdLjEDZbg_2system)(tyObject_Cell__1zcF9cV8XIAtbN8h5HRUB8g* c);
static N_INLINE(NI, minuspercent___dgYAo7RfdUVVpvkfKDym8wsystem)(NI x, NI y);
static N_INLINE(void, nimFrame)(TFrame* s);
N_LIB_PRIVATE N_NOINLINE(void, callDepthLimitReached__mMRdr4sgmnykA9aWeM9aDZlw)(void);
static N_INLINE(void, popFrame)(void);
static N_INLINE(NIM_BOOL, ltpercent___hPljn3JCDQ00ua1R07X9bxQsystem)(NI x, NI y);
static N_INLINE(void, rtlAddZCT__AT1eRuflKWyTTBdLjEDZbg_3system)(tyObject_Cell__1zcF9cV8XIAtbN8h5HRUB8g* c);
N_LIB_PRIVATE N_NOINLINE(void, addZCT__Y66tOYFjgwJ0k4aLz4bc0Q)(tyObject_CellSeq__Axo1XVm9aaQueTOldv8le5w& s, tyObject_Cell__1zcF9cV8XIAtbN8h5HRUB8g* c);
static N_INLINE(tyObject_Cell__1zcF9cV8XIAtbN8h5HRUB8g*, usrToCell__QFQqcLB3lgOdwipkv9a60xwsystem)(void* usr);
static N_INLINE(void, asgnRef)(void** dest, void* src);
static N_INLINE(void, incRef__AT1eRuflKWyTTBdLjEDZbgsystem)(tyObject_Cell__1zcF9cV8XIAtbN8h5HRUB8g* c);
static N_INLINE(NI, pluspercent___dgYAo7RfdUVVpvkfKDym8w_2system)(NI x, NI y);
N_LIB_PRIVATE N_NIMCALL(void, raiseExceptionEx)(Exception* e, NCSTRING ename, NCSTRING procname, NCSTRING filename, NI line);
N_LIB_PRIVATE N_NOINLINE(void, raiseOverflow)(void);
STRING_LITERAL(TM__MnCJ0VAmeZ9aTATUB39cx60Q_4, "kernel32", 8);
STRING_LITERAL(TM__MnCJ0VAmeZ9aTATUB39cx60Q_5, "kernel32", 8);
extern TNimType NTI__HMIVdYjdZYWskTmTQVo5BQ_;
extern TNimType NTI__iLZrPn9anoh9ad1MmO0RczFw_;
STRING_LITERAL(TM__MnCJ0VAmeZ9aTATUB39cx60Q_10, "cannot write string to file", 27);
static void* TM__MnCJ0VAmeZ9aTATUB39cx60Q_2;
tyProc__YrlAFY4fseJeExebH9aRGbw Dl_3331003_;
tyProc__YrlAFY4fseJeExebH9aRGbw Dl_3331006_;
extern TFrame* framePtr__HRfVMH3jYeBJz6Q6X9b6Ptw;
extern TFrame* framePtr__HRfVMH3jYeBJz6Q6X9b6Ptw;
extern TFrame* framePtr__HRfVMH3jYeBJz6Q6X9b6Ptw;
extern TFrame* framePtr__HRfVMH3jYeBJz6Q6X9b6Ptw;
extern TFrame* framePtr__HRfVMH3jYeBJz6Q6X9b6Ptw;
extern TFrame* framePtr__HRfVMH3jYeBJz6Q6X9b6Ptw;
extern tyObject_GcHeap__1TRH1TZMaVZTnLNcIHuNFQ gch__IcYaEuuWivYAS86vFMTS3Q;
static N_INLINE(NCSTRING, nimToCStringConv)(NimStringDesc* s) {
	NCSTRING result;
	result = (NCSTRING)0;
	{
		NIM_BOOL T3_;
		T3_ = (NIM_BOOL)0;
		T3_ = (s == NIM_NIL);
		if (T3_) goto LA4_;
		T3_ = ((*s).len == ((NI) 0));
		LA4_: ;
		if (!T3_) goto LA5_;
{		result = "";
}	}
	goto LA1_;
	LA5_: ;
	{
		result = ((NCSTRING) ((*s).data));
	}
	LA1_: ;
	return result;
}
static N_INLINE(void, nimFrame)(TFrame* s) {
	{
		if (!(framePtr__HRfVMH3jYeBJz6Q6X9b6Ptw == NIM_NIL)) goto LA3_;
{		(*s).calldepth = ((NI16) 0);
}	}
	goto LA1_;
	LA3_: ;
	{
		(*s).calldepth = (NI16)((*framePtr__HRfVMH3jYeBJz6Q6X9b6Ptw).calldepth + ((NI16) 1));
	}
	LA1_: ;
	(*s).prev = framePtr__HRfVMH3jYeBJz6Q6X9b6Ptw;
	framePtr__HRfVMH3jYeBJz6Q6X9b6Ptw = s;
	{
		if (!((*s).calldepth == ((NI16) (((NI) 2000))))) goto LA8_;
{		callDepthLimitReached__mMRdr4sgmnykA9aWeM9aDZlw();
}	}
	LA8_: ;
}
static N_INLINE(void, popFrame)(void) {
	framePtr__HRfVMH3jYeBJz6Q6X9b6Ptw = (*framePtr__HRfVMH3jYeBJz6Q6X9b6Ptw).prev;
}
static N_INLINE(NI, minuspercent___dgYAo7RfdUVVpvkfKDym8wsystem)(NI x, NI y) {
	NI result;
	nimfr_("-%", "D:\\Nim\\lib\\system\\arithmetics.nim");
	result = (NI)0;
	nimln_(437, "D:\\Nim\\lib\\system\\arithmetics.nim");
	nimln_(441, "D:\\Nim\\lib\\system\\arithmetics.nim");
	result = ((NI) ((NU)((NU64)(((NU) (x))) - (NU64)(((NU) (y))))));
	popFrame();
	return result;
}
static N_INLINE(NIM_BOOL, ltpercent___hPljn3JCDQ00ua1R07X9bxQsystem)(NI x, NI y) {
	NIM_BOOL result;
	nimfr_("<%", "D:\\Nim\\lib\\system\\comparisons.nim");
	result = (NIM_BOOL)0;
	nimln_(188, "D:\\Nim\\lib\\system\\comparisons.nim");
	nimln_(190, "D:\\Nim\\lib\\system\\comparisons.nim");
	result = ((NU64)(((NU) (x))) < (NU64)(((NU) (y))));
	popFrame();
	return result;
}
static N_INLINE(void, rtlAddZCT__AT1eRuflKWyTTBdLjEDZbg_3system)(tyObject_Cell__1zcF9cV8XIAtbN8h5HRUB8g* c) {
	nimfr_("rtlAddZCT", "D:\\Nim\\lib\\system\\gc.nim");
	nimln_(196, "D:\\Nim\\lib\\system\\gc.nim");
	addZCT__Y66tOYFjgwJ0k4aLz4bc0Q(gch__IcYaEuuWivYAS86vFMTS3Q.zct, c);
	popFrame();
}
static N_INLINE(void, decRef__AT1eRuflKWyTTBdLjEDZbg_2system)(tyObject_Cell__1zcF9cV8XIAtbN8h5HRUB8g* c) {
	nimfr_("decRef", "D:\\Nim\\lib\\system\\gc.nim");
	nimln_(201, "D:\\Nim\\lib\\system\\gc.nim");
	(*c).refcount = minuspercent___dgYAo7RfdUVVpvkfKDym8wsystem((*c).refcount, ((NI) 8));
	nimln_(202, "D:\\Nim\\lib\\system\\gc.nim");
	{
		NIM_BOOL T3_ = ltpercent___hPljn3JCDQ00ua1R07X9bxQsystem((*c).refcount, ((NI) 8));
		if (!T3_) goto LA4_;
{		nimln_(203, "D:\\Nim\\lib\\system\\gc.nim");
		rtlAddZCT__AT1eRuflKWyTTBdLjEDZbg_3system(c);
}	}
	LA4_: ;
	popFrame();
}
static N_INLINE(tyObject_Cell__1zcF9cV8XIAtbN8h5HRUB8g*, usrToCell__QFQqcLB3lgOdwipkv9a60xwsystem)(void* usr) {
	tyObject_Cell__1zcF9cV8XIAtbN8h5HRUB8g* result;
	nimfr_("usrToCell", "D:\\Nim\\lib\\system\\gc.nim");
	result = (tyObject_Cell__1zcF9cV8XIAtbN8h5HRUB8g*)0;
	nimln_(130, "D:\\Nim\\lib\\system\\gc.nim");
	NI T1_ = minuspercent___dgYAo7RfdUVVpvkfKDym8wsystem(((NI) (ptrdiff_t) (usr)), ((NI) 16));
	result = ((tyObject_Cell__1zcF9cV8XIAtbN8h5HRUB8g*) (T1_));
	popFrame();
	return result;
}
static N_INLINE(void, nimGCunrefNoCycle)(void* p) {
	nimfr_("nimGCunrefNoCycle", "D:\\Nim\\lib\\system\\gc.nim");
	nimln_(229, "D:\\Nim\\lib\\system\\gc.nim");
	tyObject_Cell__1zcF9cV8XIAtbN8h5HRUB8g* T1_ = usrToCell__QFQqcLB3lgOdwipkv9a60xwsystem(p);
	decRef__AT1eRuflKWyTTBdLjEDZbg_2system(T1_);
	popFrame();
}
static N_INLINE(NI, pluspercent___dgYAo7RfdUVVpvkfKDym8w_2system)(NI x, NI y) {
	NI result;
	nimfr_("+%", "D:\\Nim\\lib\\system\\arithmetics.nim");
	result = (NI)0;
	nimln_(426, "D:\\Nim\\lib\\system\\arithmetics.nim");
	nimln_(430, "D:\\Nim\\lib\\system\\arithmetics.nim");
	result = ((NI) ((NU)((NU64)(((NU) (x))) + (NU64)(((NU) (y))))));
	popFrame();
	return result;
}
static N_INLINE(void, incRef__AT1eRuflKWyTTBdLjEDZbgsystem)(tyObject_Cell__1zcF9cV8XIAtbN8h5HRUB8g* c) {
	nimfr_("incRef", "D:\\Nim\\lib\\system\\gc.nim");
	nimln_(184, "D:\\Nim\\lib\\system\\gc.nim");
	(*c).refcount = pluspercent___dgYAo7RfdUVVpvkfKDym8w_2system((*c).refcount, ((NI) 8));
	popFrame();
}
static N_INLINE(void, asgnRef)(void** dest, void* src) {
	nimfr_("asgnRef", "D:\\Nim\\lib\\system\\gc.nim");
	nimln_(239, "D:\\Nim\\lib\\system\\gc.nim");
	{
		if (!!((src == NIM_NIL))) goto LA3_;
{		tyObject_Cell__1zcF9cV8XIAtbN8h5HRUB8g* T5_ = usrToCell__QFQqcLB3lgOdwipkv9a60xwsystem(src);
		incRef__AT1eRuflKWyTTBdLjEDZbgsystem(T5_);
}	}
	LA3_: ;
	nimln_(240, "D:\\Nim\\lib\\system\\gc.nim");
	{
		if (!!(((*dest) == NIM_NIL))) goto LA8_;
{		tyObject_Cell__1zcF9cV8XIAtbN8h5HRUB8g* T10_ = usrToCell__QFQqcLB3lgOdwipkv9a60xwsystem((*dest));
		decRef__AT1eRuflKWyTTBdLjEDZbg_2system(T10_);
}	}
	LA8_: ;
	nimln_(241, "D:\\Nim\\lib\\system\\gc.nim");
	(*dest) = src;
	popFrame();
}
N_LIB_PRIVATE N_NOINLINE(void, raiseEIO__ZYk14k3sVNZUIjJjtqzFZQ)(NimStringDesc* msg) {
	tyObject_IOError__iLZrPn9anoh9ad1MmO0RczFw* T1_;
	NimStringDesc* T2_;
	nimfr_("raiseEIO", "D:\\Nim\\lib\\system\\io.nim");
	T1_ = (tyObject_IOError__iLZrPn9anoh9ad1MmO0RczFw*)0;
	T1_ = (tyObject_IOError__iLZrPn9anoh9ad1MmO0RczFw*) newObj((&NTI__HMIVdYjdZYWskTmTQVo5BQ_), sizeof(tyObject_IOError__iLZrPn9anoh9ad1MmO0RczFw));
	(*T1_).m_type = (&NTI__iLZrPn9anoh9ad1MmO0RczFw_);
	(*T1_).name = "IOError";
	T2_ = (NimStringDesc*)0;
	T2_ = (*T1_).message; (*T1_).message = copyStringRC1(msg);
	if (T2_) nimGCunrefNoCycle(T2_);
	asgnRef((void**) (&(*T1_).parent), NIM_NIL);
	nimln_(138, "D:\\Nim\\lib\\system\\io.nim");
	raiseExceptionEx((Exception*)T1_, "IOError", "raiseEIO", "D:\\Nim\\lib\\system\\io.nim", 138);
	popFrame();
}
N_LIB_PRIVATE N_NIMCALL(void, writeWindows__JO9bn8JE1R6MjKZqdvhBrWg)(FILE* f, NimStringDesc* s, NIM_BOOL doRaise) {
	int T1_ = fprintf(f, "%s", nimToCStringConv(s));
	int i = T1_;
	{
		while (1) {
			if (!(((NI) (i)) < (s ? s->len : 0))) goto LA3;
			{
				NI TM__MnCJ0VAmeZ9aTATUB39cx60Q_11;
				if ((NU)(i) >= (NU)(s ? s->len : 0)){ raiseIndexError2(i,(s ? s->len : 0)-1); }
				if (!((NU8)(s->data[i]) == (NU8)(0))) goto LA6_;
{				int T8_ = fputc(0, f);
				int w = T8_;
				{
					if (!!((w == ((NI32) 0)))) goto LA11_;
{					{
						if (!doRaise) goto LA15_;
{						raiseEIO__ZYk14k3sVNZUIjJjtqzFZQ(((NimStringDesc*) &TM__MnCJ0VAmeZ9aTATUB39cx60Q_10));
}					}
					LA15_: ;
					goto LA2;
}				}
				LA11_: ;
				if (nimAddInt(i, ((NI) 1), &TM__MnCJ0VAmeZ9aTATUB39cx60Q_11)) { raiseOverflow(); };
				if (TM__MnCJ0VAmeZ9aTATUB39cx60Q_11 < (-2147483647 -1) || TM__MnCJ0VAmeZ9aTATUB39cx60Q_11 > 2147483647){ raiseOverflow(); }
				i = (int)(TM__MnCJ0VAmeZ9aTATUB39cx60Q_11);
}			}
			goto LA4_;
			LA6_: ;
			{
				NI TM__MnCJ0VAmeZ9aTATUB39cx60Q_12;
				if ((NU)(i) >= (NU)(s ? s->len : 0)){ raiseIndexError2(i,(s ? s->len : 0)-1); }
				int T18_ = fprintf(f, "%s", (&s->data[i]));
				int w_2 = T18_;
				{
					if (!(w_2 <= ((NI32) 0))) goto LA21_;
{					{
						if (!doRaise) goto LA25_;
{						raiseEIO__ZYk14k3sVNZUIjJjtqzFZQ(((NimStringDesc*) &TM__MnCJ0VAmeZ9aTATUB39cx60Q_10));
}					}
					LA25_: ;
					goto LA2;
}				}
				LA21_: ;
				if (nimAddInt(i, ((NI) (w_2)), &TM__MnCJ0VAmeZ9aTATUB39cx60Q_12)) { raiseOverflow(); };
				if (TM__MnCJ0VAmeZ9aTATUB39cx60Q_12 < (-2147483647 -1) || TM__MnCJ0VAmeZ9aTATUB39cx60Q_12 > 2147483647){ raiseOverflow(); }
				i = (int)(TM__MnCJ0VAmeZ9aTATUB39cx60Q_12);
			}
			LA4_: ;
		} LA3: ;
	} LA2: ;
}
N_LIB_PRIVATE N_NIMCALL(void, echoBinSafe)(NimStringDesc** args, NI argsLen_0) {
	nimfr_("echoBinSafe", "D:\\Nim\\lib\\system\\io.nim");
	{
		NimStringDesc* s;
		s = (NimStringDesc*)0;
		nimln_(3, "D:\\Nim\\lib\\system\\iterators.nim");
		NI i = ((NI) 0);
		{
			nimln_(4, "D:\\Nim\\lib\\system\\iterators.nim");
			while (1) {
				NI TM__MnCJ0VAmeZ9aTATUB39cx60Q_13;
				if (!(i < argsLen_0)) goto LA3;
				nimln_(641, "D:\\Nim\\lib\\system\\io.nim");
				if ((NU)(i) >= (NU)(argsLen_0)){ raiseIndexError2(i,argsLen_0-1); }
				s = args[i];
				nimln_(643, "D:\\Nim\\lib\\system\\io.nim");
				writeWindows__JO9bn8JE1R6MjKZqdvhBrWg(stdout, s, NIM_FALSE);
				nimln_(6, "D:\\Nim\\lib\\system\\iterators.nim");
				if (nimAddInt(i, ((NI) 1), &TM__MnCJ0VAmeZ9aTATUB39cx60Q_13)) { raiseOverflow(); };
				i = (NI)(TM__MnCJ0VAmeZ9aTATUB39cx60Q_13);
			} LA3: ;
		}
	}
	nimln_(647, "D:\\Nim\\lib\\system\\io.nim");
	int T4_ = fwrite(((void*) ("\012")), ((size_t) 1), ((size_t) 1), stdout);
	(void)(T4_);
	nimln_(648, "D:\\Nim\\lib\\system\\io.nim");
	int T5_ = fflush(stdout);
	(void)(T5_);
	popFrame();
}
N_LIB_PRIVATE N_NIMCALL(void, stdlib_ioInit000)(void) {
{
	nimfr_("io", "D:\\Nim\\lib\\system\\io.nim");
	nimln_(665, "D:\\Nim\\lib\\system\\io.nim");
	int T1_ = _fileno(stdin);
	_setmode(T1_, _O_BINARY);
	nimln_(666, "D:\\Nim\\lib\\system\\io.nim");
	int T2_ = _fileno(stdout);
	_setmode(T2_, _O_BINARY);
	nimln_(667, "D:\\Nim\\lib\\system\\io.nim");
	int T3_ = _fileno(stderr);
	_setmode(T3_, _O_BINARY);
	nimln_(677, "D:\\Nim\\lib\\system\\io.nim");
	NI32 T4_ = Dl_3331003_(((unsigned int) 65001));
	(void)(T4_);
	nimln_(678, "D:\\Nim\\lib\\system\\io.nim");
	NI32 T5_ = Dl_3331006_(((unsigned int) 65001));
	(void)(T5_);
	popFrame();
}
}

N_LIB_PRIVATE N_NIMCALL(void, stdlib_ioDatInit000)(void) {
if (!((TM__MnCJ0VAmeZ9aTATUB39cx60Q_2 = nimLoadLibrary(((NimStringDesc*) &TM__MnCJ0VAmeZ9aTATUB39cx60Q_4)))
)) nimLoadLibraryError(((NimStringDesc*) &TM__MnCJ0VAmeZ9aTATUB39cx60Q_5));
	Dl_3331003_ = (tyProc__YrlAFY4fseJeExebH9aRGbw) nimGetProcAddr(TM__MnCJ0VAmeZ9aTATUB39cx60Q_2, "SetConsoleOutputCP");
	Dl_3331006_ = (tyProc__YrlAFY4fseJeExebH9aRGbw) nimGetProcAddr(TM__MnCJ0VAmeZ9aTATUB39cx60Q_2, "SetConsoleCP");
}

